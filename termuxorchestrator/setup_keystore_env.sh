#!/bin/bash
# Secure Keystore Environment Setup
# Safely loads credentials from keystore.txt and exports to secure environment

set -euo pipefail

KEYSTORE_FILE="keystore.txt"
SECURE_ENV_FILE="$HOME/.termux_orchestrator_env"

# Check if keystore file exists
if [ ! -f "$KEYSTORE_FILE" ]; then
    echo "Error: $KEYSTORE_FILE not found"
    echo "Create this file with your credentials in KEY=value format"
    exit 1
fi

# Create secure environment file if it doesn't exist
if [ ! -f "$SECURE_ENV_FILE" ]; then
    echo "Creating secure environment file..."
    cat > "$SECURE_ENV_FILE" << 'EOF'
# Termux Orchestrator Environment Configuration
# Generated by setup_keystore_env.sh

# API Keys (will be populated from keystore.txt)
EOF
    chmod 600 "$SECURE_ENV_FILE"
fi

# Backup existing environment file
cp "$SECURE_ENV_FILE" "$SECURE_ENV_FILE.backup.$(date +%s)"

echo "Loading credentials from $KEYSTORE_FILE..."

# Enable automatic export of variables
set -a

# Source the keystore file (this loads all KEY=value pairs)
if source "$KEYSTORE_FILE" 2>/dev/null; then
    echo "✓ Credentials loaded successfully"
else
    echo "Error: Failed to source $KEYSTORE_FILE"
    echo "Make sure it contains valid KEY=value pairs"
    set +a
    exit 1
fi

# Disable automatic export
set +a

echo "Updating $SECURE_ENV_FILE with loaded credentials..."

# Update the secure environment file with exported variables
{
    echo "# Termux Orchestrator Environment Configuration"
    echo "# Updated: $(date)"
    echo ""
    
    # Export common orchestrator variables
    [ -n "${GITHUB_TOKEN:-}" ] && echo "export GITHUB_TOKEN=\"$GITHUB_TOKEN\""
    [ -n "${OPENAI_API_KEY:-}" ] && echo "export OPENAI_API_KEY=\"$OPENAI_API_KEY\""
    [ -n "${ANTHROPIC_API_KEY:-}" ] && echo "export ANTHROPIC_API_KEY=\"$ANTHROPIC_API_KEY\""
    [ -n "${GOOGLE_API_KEY:-}" ] && echo "export GOOGLE_API_KEY=\"$GOOGLE_API_KEY\""
    [ -n "${DEEPSEEK_API_KEY:-}" ] && echo "export DEEPSEEK_API_KEY=\"$DEEPSEEK_API_KEY\""
    [ -n "${EXPO_TOKEN:-}" ] && echo "export EXPO_TOKEN=\"$EXPO_TOKEN\""
    [ -n "${CODEMAGIC_ACCESS_TOKEN:-}" ] && echo "export CODEMAGIC_ACCESS_TOKEN=\"$CODEMAGIC_ACCESS_TOKEN\""
    [ -n "${CODEMAGIC_PROJECT_ID:-}" ] && echo "export CODEMAGIC_PROJECT_ID=\"$CODEMAGIC_PROJECT_ID\""
    
    # Android keystore variables
    [ -n "${KEYSTORE_PASSWORD:-}" ] && echo "export KEYSTORE_PASSWORD=\"$KEYSTORE_PASSWORD\""
    [ -n "${KEY_PASSWORD:-}" ] && echo "export KEY_PASSWORD=\"$KEY_PASSWORD\""
    [ -n "${KEY_ALIAS:-}" ] && echo "export KEY_ALIAS=\"$KEY_ALIAS\""
    [ -n "${KEYSTORE_PATH:-}" ] && echo "export KEYSTORE_PATH=\"$KEYSTORE_PATH\""
    
    # Google Play credentials
    [ -n "${GOOGLE_PLAY_JSON:-}" ] && echo "export GOOGLE_PLAY_JSON=\"$GOOGLE_PLAY_JSON\""
    
    echo ""
    echo "# Orchestrator Configuration"
    echo "export ORCHESTRATOR_HOME=\"$HOME/termux-orchestrator\""
    echo "export ORCHESTRATOR_LOG_LEVEL=\"info\""
    echo "export ORCHESTRATOR_WORKSPACE=\"$HOME/orchestrator-workspace\""
    echo ""
    echo "# Path additions"
    echo "export PATH=\"\$ORCHESTRATOR_HOME/bin:\$PATH\""
    
} > "$SECURE_ENV_FILE"

# Ensure secure permissions
chmod 600 "$SECURE_ENV_FILE"

echo "✓ Environment file updated: $SECURE_ENV_FILE"
echo "✓ File permissions set to 600 (owner read/write only)"

# Source the updated environment
echo "Loading updated environment..."
source "$SECURE_ENV_FILE"

echo "✓ Environment loaded successfully"
echo ""
echo "Loaded variables:"
env | grep -E "(GITHUB_TOKEN|API_KEY|EXPO_TOKEN|CODEMAGIC|KEYSTORE)" | sed 's/=.*/=***masked***/' | sort

echo ""
echo "Next steps:"
echo "1. Add 'source $SECURE_ENV_FILE' to your ~/.bashrc"
echo "2. Securely delete keystore.txt: shred -u keystore.txt"
echo "3. Test: echo \$GITHUB_TOKEN (should show your token)"