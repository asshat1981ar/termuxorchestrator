name: Android Build (Compose)

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]
  workflow_dispatch:

env:
  JAVA_VERSION: "17"
  GRADLE_OPTS: -Dorg.gradle.daemon=false

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
      - name: 🏗 Checkout repository
        uses: actions/checkout@v4

      - name: ☕ Set up JDK
        uses: actions/setup-java@v4
        with:
          java-version: ${{ env.JAVA_VERSION }}
          distribution: 'temurin'

      - name: 🐘 Setup Gradle
        uses: gradle/gradle-build-action@v2
        with:
          gradle-version: wrapper

      - name: 🔑 Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: 🧹 Clean project
        run: ./gradlew clean

      - name: 🔍 Run lint checks
        run: ./gradlew lintDebug

      - name: 🧪 Run unit tests
        run: ./gradlew testDebugUnitTest

      - name: 📤 Upload test reports
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-reports-${{ github.sha }}
          path: |
            app/build/reports/tests/
            app/build/reports/lint-results-debug.html
          retention-days: 7

      - name: 🔧 Build debug APK
        if: github.event_name == 'pull_request'
        run: ./gradlew assembleDebug

      - name: 🚀 Build release APK
        if: github.event_name == 'push' || github.event_name == 'workflow_dispatch'
        run: ./gradlew assembleRelease

      - name: 🔧 Build debug AAB
        if: github.event_name == 'pull_request'
        run: ./gradlew bundleDebug

      - name: 🚀 Build release AAB  
        if: github.event_name == 'push' || github.event_name == 'workflow_dispatch'
        run: ./gradlew bundleRelease

      - name: 📤 Upload debug artifacts
        if: github.event_name == 'pull_request'
        uses: actions/upload-artifact@v4
        with:
          name: android-debug-${{ github.sha }}
          path: |
            app/build/outputs/apk/debug/app-debug.apk
            app/build/outputs/bundle/debug/app-debug.aab
          retention-days: 7

      - name: 📤 Upload release artifacts
        if: github.event_name == 'push' || github.event_name == 'workflow_dispatch'
        uses: actions/upload-artifact@v4
        with:
          name: android-release-${{ github.sha }}
          path: |
            app/build/outputs/apk/release/app-release.apk
            app/build/outputs/apk/release/app-release-unsigned.apk
            app/build/outputs/bundle/release/app-release.aab
          retention-days: 30

      - name: 📋 Build summary
        if: always()
        run: |
          echo "## Android Build Summary" >> $GITHUB_STEP_SUMMARY
          echo "- Platform: Android" >> $GITHUB_STEP_SUMMARY
          echo "- Framework: Kotlin Compose" >> $GITHUB_STEP_SUMMARY
          echo "- Java Version: ${{ env.JAVA_VERSION }}" >> $GITHUB_STEP_SUMMARY
          
          if [ "${{ github.event_name }}" == "pull_request" ]; then
            echo "- Build Type: Debug" >> $GITHUB_STEP_SUMMARY
            echo "- Artifact: android-debug-${{ github.sha }}" >> $GITHUB_STEP_SUMMARY
            
            if [ -f "app/build/outputs/apk/debug/app-debug.apk" ]; then
              APK_SIZE=$(du -h app/build/outputs/apk/debug/app-debug.apk | cut -f1)
              echo "- APK Size: $APK_SIZE" >> $GITHUB_STEP_SUMMARY
              echo "✅ Debug build succeeded" >> $GITHUB_STEP_SUMMARY
            fi
          else
            echo "- Build Type: Release" >> $GITHUB_STEP_SUMMARY
            echo "- Artifact: android-release-${{ github.sha }}" >> $GITHUB_STEP_SUMMARY
            
            if [ -f "app/build/outputs/apk/release/app-release.apk" ]; then
              APK_SIZE=$(du -h app/build/outputs/apk/release/app-release.apk | cut -f1)
              echo "- APK Size: $APK_SIZE" >> $GITHUB_STEP_SUMMARY
              echo "✅ Release build succeeded" >> $GITHUB_STEP_SUMMARY
            else
              echo "❌ Build failed - no APK generated" >> $GITHUB_STEP_SUMMARY
            fi
          fi
          
          # Show test results
          if [ -f "app/build/test-results/testDebugUnitTest/TEST-*.xml" ]; then
            echo "- Unit Tests: ✅ Passed" >> $GITHUB_STEP_SUMMARY
          else
            echo "- Unit Tests: ❌ Failed or Skipped" >> $GITHUB_STEP_SUMMARY
          fi

  # Optional: Run instrumented tests on Firebase Test Lab
  instrumented-tests:
    runs-on: ubuntu-latest
    needs: build
    if: github.event_name == 'push' && github.ref == 'refs/heads/master'
    steps:
      - name: 🏗 Checkout repository
        uses: actions/checkout@v4

      - name: ☕ Set up JDK
        uses: actions/setup-java@v4
        with:
          java-version: ${{ env.JAVA_VERSION }}
          distribution: 'temurin'

      - name: 🔑 Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: 🧪 Build instrumented test APK
        run: ./gradlew assembleDebugAndroidTest

      - name: 🔥 Run Firebase Test Lab
        # Uncomment and configure if you want Firebase Test Lab
        # uses: asadmansr/Firebase-Test-Lab-Action@v1.0
        # with:
        #   arg-spec: '.github/testlab.yml'
        run: echo "Firebase Test Lab would run instrumented tests here"

      - name: 📤 Upload instrumented test artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: instrumented-tests-${{ github.sha }}
          path: |
            app/build/outputs/apk/androidTest/debug/app-debug-androidTest.apk
          retention-days: 7