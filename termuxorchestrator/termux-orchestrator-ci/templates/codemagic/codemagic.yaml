# Codemagic configuration for Flutter Android builds
# Generated by Termux Orchestrator

workflows:
  android-workflow:
    name: Android Workflow
    max_build_duration: 120
    instance_type: mac_mini_m1
    
    environment:
      android_signing:
        - keystore_reference
      groups:
        - google_play # Define this group in Codemagic UI with:
                      # GCLOUD_SERVICE_ACCOUNT_CREDENTIALS
                      # GOOGLE_PLAY_TRACK (alpha/beta/production)
      flutter: stable
      java: 17
      
    cache:
      cache_paths:
        - $FLUTTER_ROOT/.pub-cache
        - $HOME/.gradle/caches
        - $HOME/Library/Caches/CocoaPods
        
    scripts:
      - name: Set up local.properties
        script: |
          echo "flutter.sdk=$HOME/programs/flutter" > "$CM_BUILD_DIR/android/local.properties"
          
      - name: Get Flutter dependencies
        script: |
          flutter packages pub get
          
      - name: Flutter analyze
        script: |
          flutter analyze
          
      - name: Flutter test
        script: |
          if grep -q "flutter_test:" pubspec.yaml; then
            flutter test
          else
            echo "No tests found, skipping"
          fi
          
      - name: Build APK with Flutter
        script: |
          flutter build apk --release --split-per-abi
          
      - name: Build AAB with Flutter  
        script: |
          flutter build appbundle --release
          
    artifacts:
      - build/app/outputs/flutter-apk/**/*.apk
      - build/app/outputs/bundle/release/app-release.aab
      - flutter_drive.log
      
    publishing:
      # Slack notifications
      slack:
        channel: '#mobile-builds'
        notify_on_build_start: true
        notify:
          success: true
          failure: true
          
      # Email notifications  
      email:
        recipients:
          - developer@example.com
        notify:
          success: true
          failure: true
          
      # Google Play deployment (uncomment to enable)
      # google_play:
      #   credentials: $GCLOUD_SERVICE_ACCOUNT_CREDENTIALS
      #   track: $GOOGLE_PLAY_TRACK
      #   submit_as_draft: true

  # Debug build workflow for PRs
  android-debug-workflow:
    name: Android Debug Build
    max_build_duration: 60
    instance_type: linux_x2
    
    triggering:
      events:
        - pull_request
      branch_patterns:
        - pattern: '*'
          include: true
          source: true
          
    environment:
      flutter: stable
      java: 17
      
    cache:
      cache_paths:
        - $FLUTTER_ROOT/.pub-cache
        - $HOME/.gradle/caches
        
    scripts:
      - name: Set up local.properties
        script: |
          echo "flutter.sdk=$HOME/programs/flutter" > "$CM_BUILD_DIR/android/local.properties"
          
      - name: Get Flutter dependencies
        script: |
          flutter packages pub get
          
      - name: Flutter analyze
        script: |
          flutter analyze
          
      - name: Flutter test
        script: |
          if grep -q "flutter_test:" pubspec.yaml; then
            flutter test
          else
            echo "No tests found, skipping"
          fi
          
      - name: Build debug APK
        script: |
          flutter build apk --debug
          
    artifacts:
      - build/app/outputs/flutter-apk/app-debug.apk
      - flutter_drive.log
      
    publishing:
      slack:
        channel: '#mobile-builds'
        notify:
          success: false # Don't spam for debug builds
          failure: true

  # iOS workflow (optional)
  ios-workflow:
    name: iOS Workflow
    max_build_duration: 120
    instance_type: mac_mini_m1
    
    triggering:
      events:
        - push
      branch_patterns:
        - pattern: 'main'
          include: true
          source: true
        - pattern: 'develop'
          include: true
          source: true
          
    environment:
      ios_signing:
        distribution_type: ad_hoc
        bundle_identifier: com.example.app
      groups:
        - app_store_connect # Define with App Store Connect API key
      flutter: stable
      xcode: latest
      cocoapods: default
      
    cache:
      cache_paths:
        - $FLUTTER_ROOT/.pub-cache
        - $HOME/Library/Caches/CocoaPods
        
    scripts:
      - name: Set up code signing settings on Xcode project
        script: |
          xcode-project use-profiles
          
      - name: Get Flutter dependencies
        script: |
          flutter packages pub get
          
      - name: Install CocoaPods dependencies
        script: |
          find . -name "Podfile" -execdir pod install \;
          
      - name: Flutter test
        script: |
          if grep -q "flutter_test:" pubspec.yaml; then
            flutter test
          else
            echo "No tests found, skipping"
          fi
          
      - name: Flutter build iOS
        script: |
          flutter build ios --release --no-codesign
          
      - name: Build ipa for distribution
        script: |
          xcode-project build-ipa \
            --workspace ios/Runner.xcworkspace \
            --scheme Runner \
            --archive-flags="-destination 'generic/platform=iOS'"
            
    artifacts:
      - build/ios/ipa/*.ipa
      - /tmp/xcodebuild_logs/*.log
      - flutter_drive.log
      
    publishing:
      # TestFlight deployment (uncomment to enable)
      # app_store_connect:
      #   auth: integration
      #   submit_to_testflight: true
      #   beta_groups:
      #     - group_name: 'Internal Testers'
      
      slack:
        channel: '#mobile-builds'
        notify:
          success: true
          failure: true
          
      email:
        recipients:
          - developer@example.com
        notify:
          success: true  
          failure: true