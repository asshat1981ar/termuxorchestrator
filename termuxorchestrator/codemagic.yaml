# Codemagic CI/CD configuration for React Native + Expo/EAS
# Generated by Termux Orchestrator

workflows:
  react-native-android-release:
    name: React Native Android Release
    max_build_duration: 120
    instance_type: mac_mini_m1
    
    triggering:
      events:
        - push
      branch_patterns:
        - pattern: 'main'
          include: true
          source: true
        - pattern: 'master'
          include: true
          source: true
          
    environment:
      groups:
        - expo_credentials    # EXPO_TOKEN
        - keystore_credentials # Optional for signing
        - notification_credentials # Optional for notifications
      node: 18
      npm: latest
      
    cache:
      cache_paths:
        - $HOME/.npm
        - node_modules
        
    scripts:
      - name: Install dependencies
        script: |
          npm ci
          
      - name: Install EAS CLI
        script: |
          npm install -g @expo/eas-cli
          
      - name: Authenticate with Expo
        script: |
          eas login --token $EXPO_TOKEN
          
      - name: Run tests
        script: |
          if [ -f "package.json" ] && npm run test --if-present; then
            echo "Tests passed"
          else
            echo "No tests found or tests failed, continuing build"
          fi
          
      - name: Check EAS configuration
        script: |
          eas build:configure || echo "EAS already configured"
          
      - name: Build Android APK with EAS
        script: |
          # Build using EAS with production profile
          eas build --platform android --profile production --non-interactive --wait --clear-cache
          
      - name: Download EAS artifacts
        script: |
          # Create artifacts directory
          mkdir -p artifacts
          
          # Get the latest build info
          BUILD_ID=$(eas build:list --platform android --status finished --limit 1 --json | jq -r '.[0].id')
          BUILD_URL=$(eas build:list --platform android --status finished --limit 1 --json | jq -r '.[0].artifacts.buildUrl')
          
          echo "Build ID: $BUILD_ID"
          echo "Build URL: $BUILD_URL"
          
          # Download the APK
          if [ "$BUILD_URL" != "null" ]; then
            curl -L "$BUILD_URL" -o artifacts/app-release.apk
            echo "APK downloaded successfully"
          else
            echo "No build URL found"
            exit 1
          fi
          
    artifacts:
      - artifacts/*.apk
      - artifacts/*.aab
      
    publishing:
      email:
        recipients:
          - $CM_EMAIL
        notify:
          success: true
          failure: true
          
      slack:
        channel: '#mobile-builds'
        notify_on_build_start: false
        notify:
          success: true
          failure: true

  # Development/PR build workflow
  react-native-android-debug:
    name: React Native Android Debug
    max_build_duration: 60
    instance_type: linux_x2
    
    triggering:
      events:
        - pull_request
      branch_patterns:
        - pattern: '*'
          include: true
          source: true
          
    environment:
      groups:
        - expo_credentials
      node: 18
      npm: latest
      
    cache:
      cache_paths:
        - $HOME/.npm
        - node_modules
        
    scripts:
      - name: Install dependencies
        script: |
          npm ci
          
      - name: Install EAS CLI
        script: |
          npm install -g @expo/eas-cli
          
      - name: Authenticate with Expo
        script: |
          eas login --token $EXPO_TOKEN
          
      - name: Run linting
        script: |
          npm run lint --if-present || echo "No linting configured"
          
      - name: Run tests
        script: |
          npm test --if-present || echo "No tests configured"
          
      - name: Build development APK
        script: |
          # Build development version for testing
          eas build --platform android --profile development --non-interactive --wait
          
      - name: Download development artifacts
        script: |
          mkdir -p artifacts
          BUILD_ID=$(eas build:list --platform android --status finished --limit 1 --json | jq -r '.[0].id')
          BUILD_URL=$(eas build:list --platform android --status finished --limit 1 --json | jq -r '.[0].artifacts.buildUrl')
          
          if [ "$BUILD_URL" != "null" ]; then
            curl -L "$BUILD_URL" -o artifacts/app-debug.apk
          fi
          
    artifacts:
      - artifacts/*.apk
      
    publishing:
      slack:
        channel: '#mobile-builds'
        notify:
          success: false  # Don't spam for debug builds
          failure: true

  # iOS workflow (optional)
  react-native-ios-release:
    name: React Native iOS Release
    max_build_duration: 120
    instance_type: mac_mini_m1
    
    triggering:
      events:
        - push
      branch_patterns:
        - pattern: 'main'
          include: true
          source: true
          
    environment:
      groups:
        - expo_credentials
        - app_store_connect_credentials
      node: 18
      xcode: latest
      cocoapods: default
      
    cache:
      cache_paths:
        - $HOME/.npm
        - node_modules
        
    scripts:
      - name: Install dependencies
        script: |
          npm ci
          
      - name: Install EAS CLI
        script: |
          npm install -g @expo/eas-cli
          
      - name: Authenticate with Expo
        script: |
          eas login --token $EXPO_TOKEN
          
      - name: Build iOS IPA with EAS
        script: |
          eas build --platform ios --profile production --non-interactive --wait
          
      - name: Download iOS artifacts
        script: |
          mkdir -p artifacts
          BUILD_ID=$(eas build:list --platform ios --status finished --limit 1 --json | jq -r '.[0].id')
          BUILD_URL=$(eas build:list --platform ios --status finished --limit 1 --json | jq -r '.[0].artifacts.buildUrl')
          
          if [ "$BUILD_URL" != "null" ]; then
            curl -L "$BUILD_URL" -o artifacts/app-release.ipa
          fi
          
    artifacts:
      - artifacts/*.ipa
      
    publishing:
      # Uncomment to enable TestFlight deployment
      # app_store_connect:
      #   auth: integration
      #   submit_to_testflight: true
      #   beta_groups:
      #     - group_name: 'Internal Testers'
      
      email:
        recipients:
          - $CM_EMAIL
        notify:
          success: true
          failure: true